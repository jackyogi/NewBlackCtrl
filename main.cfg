/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var Flash = xdc.useModule('ti.mcu.msp430.csl.memory.Flash');
var Timer1_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer1_A3');
CSL.configApiVersion = "1.20.00";

/* these modules should be part of every project */
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var InterruptVectors = xdc.useModule('ti.mcu.msp430.csl.interrupt_vectors.InterruptVectors');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;

/* Enable global interrupt */
System.srRegs.SR.GIE = System.srDefs.GIE;
CSL.device.vcc = 2.5;
BCSplus.userInputDCO = 8000.0;
BCSplus.regs.LFXT1CLKHz = 32768.0;
BCSplus.regs.BCSCTL3.LFXT1S = BCSplus.defs.LFXT1S_0;
GPIO.regs.P2SEL.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P2SEL.Bit7 = GPIO.defs.BIT7;
BCSplus.regs.BCSCTL1.DIVA = BCSplus.defs.DIVA_2;
WDTplus.regs.WDTCTL.WDTHOLD = WDTplus.defs.WDTHOLD_OFF;
WDTplus.regs.WDTCTL.WDTTMSEL = WDTplus.defs.WDTTMSEL;
WDTplus.regs.WDTCTL.WDTSSEL = WDTplus.defs.WDTSSEL;
WDTplus.regs.WDTCTL.WDTIS0 = WDTplus.defs.WDTIS0_OFF;
WDTplus.regs.WDTCTL.WDTIS1 = WDTplus.defs.WDTIS1;
System.ie1Regs.IE1.WDTIE = System.ie1Defs.WDTIE;
System.ie1Regs.interruptSource[0].interruptHandler = true;
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P1DIR.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1DIR.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P1DIR.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P1DIR.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P2DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P2DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P2DIR.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P3DIR.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P3DIR.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P3DIR.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P3DIR.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P2DIR.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P2DIR.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P2DIR.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P1OUT.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P2OUT.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P2OUT.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P2OUT.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P3DIR.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P3DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P3DIR.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P3REN.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P3OUT.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P2OUT.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P1OUT.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P1OUT.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P3OUT.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P2OUT.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P3OUT.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P3REN.Bit5 = GPIO.defs.BIT5;
BCSplus.regs.BCSCTL3.XCAP = BCSplus.defs.XCAP_2;
GPIO.regs.P1SEL.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P2SEL2.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P3SEL2.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P3SEL2.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P1SEL2.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1SEL2.Bit4 = GPIO.defs.BIT4_OFF;
Flash.regs.FCTL2.FSSEL = Flash.defs.FSSEL_1;
Flash.regs.FCTL2.FN0 = Flash.defs.FN0;
Flash.regs.FCTL2.FN1 = Flash.defs.FN1_OFF;
Flash.regs.FCTL2.FN3 = Flash.defs.FN3_OFF;
Flash.regs.FCTL2.FN5 = Flash.defs.FN5_OFF;
GPIO.regs.P2OUT.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P3OUT.Bit4 = GPIO.defs.BIT4;
Timer1_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_3;
Timer1_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_2;
Timer1_A3.ccInputPin[0] = 2;
Timer1_A3.regs.TA1CTL.MC = Timer1_A3.defs.MC_2;
Timer1_A3.regs.TA1CCR0 = 0;
Timer1_A3.regs.TA1CTL.TASSEL = Timer1_A3.defs.TASSEL_2;
Timer1_A3.inputClockToTimer = 32.768;
Timer1_A3.ccrOutputPin[0] = 0;
Timer1_A3.regs.interruptSource[0].interruptEnable = false;
Timer1_A3.regs.interruptSource[0].interruptHandler = false;
Timer1_A3.regs.interruptSource[2].interruptHandler = false;
Timer1_A3.regs.interruptSource[3].interruptHandler = false;
Timer1_A3.regs.TA1CTL.TAIE = Timer1_A3.defs.TAIE_OFF;
Timer1_A3.regs.interruptSource[1].interruptHandler = true;
Timer1_A3.regs.interruptSource[1].interruptEnable = true;
Timer1_A3.regs.TA1CCTL0.CCIE = Timer1_A3.defs.CCIE;
Timer1_A3.regs.TA1CCTL0.CAP = Timer1_A3.defs.CAP;
Timer1_A3.regs.TA1CCTL0.SCS = Timer1_A3.defs.SCS;
Timer1_A3.regs.TA1CCTL0.CM = Timer1_A3.defs.CM_2;
GPIO.regs.P2SEL.Bit0 = GPIO.defs.BIT0_OFF;
Timer1_A3.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_0;
Timer1_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_0;
Timer1_A3.regs.TA1CCR1 = 0;
Timer1_A3.regs.TA1CCTL1.CAP = Timer1_A3.defs.CAP_OFF;
Timer1_A3.regs.TA1CCTL1.SCS = Timer1_A3.defs.SCS_OFF;
Timer1_A3.ccrOutputPin[2] = 0;
Timer1_A3.regs.TA1CCTL1.CM = Timer1_A3.defs.CM_3;
Timer1_A3.ccInputPin[2] = 0;
Timer1_A3.ccrXTimerSelection_PowerUser[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_0;
Timer1_A3.ccrXTimerSelection_BasicView[2] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_0;
Timer1_A3.regs.TA1CCR2 = 0;
Timer1_A3.regs.TA1CCTL2.CAP = Timer1_A3.defs.CAP_OFF;
Timer1_A3.regs.TA1CCTL2.SCS = Timer1_A3.defs.SCS_OFF;
Timer1_A3.regs.TA1CCTL0.CCIS = Timer1_A3.defs.CCIS_1;
GPIO.regs.P2SEL.Bit3 = GPIO.defs.BIT3;
Timer1_A3.regs.TA1CTL.ID = Timer1_A3.defs.ID_0;
Flash.regs.FCTL2.FN2 = Flash.defs.FN2;
Flash.regs.FCTL2.FN4 = Flash.defs.FN4;
BCSplus.regs.BCSCTL2.SELS = BCSplus.defs.SELS;
Timer1_A3.inClkPin[0] = 0;
Timer1_A3.txClkPin[0] = 0;
Timer1_A3.regs.TA1CTL.TACLR = Timer1_A3.defs.TACLR;
BCSplus.userInputStartDelay = 88.0;
